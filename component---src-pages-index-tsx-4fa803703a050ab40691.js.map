{"version":3,"sources":["webpack:///./src/components/avatar.tsx","webpack:///./src/components/name-card.tsx","webpack:///./src/components/post-link.tsx","webpack:///./src/pages/index.tsx"],"names":["RoundedImg","styled","img","Name","h1","StyledAvatar","width","src","alt","height","Media","div","MediaBody","MediaImage","NameCard","post","to","frontmatter","path","title","date","indexPageQuery","IndexContainer","IndexPage","render","this","props","data","site","siteMetadata","name","tagline","lookingForWork","allMarkdownRemark","edges","filter","edge","node","map","key","id","href","React"],"mappings":"6JAGMA,EAAaC,IAAOC,IAAV,yEAAGD,CAAH,sCCGVE,EAAOF,IAAOG,GAAV,qEAAGH,CAAH,4DAMJI,EAAeJ,aDJN,oBAAGK,aAAH,MAAW,OAAX,SACb,kBAACN,EAAD,CACEO,IAAI,gBACJC,IAAI,0BACJF,MAAOA,EACPG,OAAQH,OCDM,6EAAGL,CAAH,mBAIZS,EAAQT,IAAOU,IAAV,sEAAGV,CAAH,0DAMLW,EAAYX,IAAOU,IAAV,0EAAGV,CAAH,aAITY,EAAaZ,IAAOU,IAAV,2EAAGV,CAAH,wBAIHa,EAAW,kBACtB,kBAACJ,EAAD,KACE,kBAACG,EAAD,KACE,kBAACR,EAAD,OAEF,kBAACO,EAAD,KACE,kBAACT,EAAD,iC,YCjCS,kBAAGY,EAAH,EAAGA,KAAH,OACb,kBAAC,IAAD,CAAMC,GAAID,EAAKE,YAAYC,MACxBH,EAAKE,YAAYE,MADpB,KAC6BJ,EAAKE,YAAYG,KAD9C,M,uFCiBK,IAAMC,EAAiB,aAwBxBC,EAAiBrB,IAAOU,IAAV,4EAAGV,CAAH,qCAKCsB,E,gLACnBC,OAAA,WAAU,MACuCC,KAAKC,MAAMC,KAAKC,KAAKC,aAD5D,EACAC,KADA,EACMC,QADN,EACeC,eACAP,KAAKC,MAAMC,KAAKM,kBAA/BC,MAGLC,QAAO,SAACC,GAAD,QAAiBA,EAAKC,KAAKpB,YAAYG,QAC9CkB,KAAI,SAACF,GAAD,OAAe,gBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIzB,KAAMqB,EAAKC,UAE9D,OACE,gBAAC,IAAD,KACE,gBAAC,EAAD,MACA,gBAACf,EAAD,KACE,oDACA,yEAGA,+FAEE,qBAAGmB,KAAK,yBAAR,aAFF,IAEgD,qBAAGA,KAAK,iCAAR,iBAFhD,QAGY,qBAAGA,KAAK,yBAAR,eAEZ,6M,GAtB6BC","file":"component---src-pages-index-tsx-4fa803703a050ab40691.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst RoundedImg = styled.img`\n  border-radius: 50%;\n  display: block;\n`\n\nexport default ({ width = '60px' }) => (\n  <RoundedImg\n    src=\"assets/me.jpg\"\n    alt=\"Portrait of @kyranjamie\"\n    width={width}\n    height={width}\n  />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport Avatar from './avatar'\nimport { AvailableForWork } from './available-for-work'\n\nconst Name = styled.h1`\n  font-size: 16px;\n  margin: 8px 0 12px 0;\n  font-weight: normal;\n`\n\nconst StyledAvatar = styled(Avatar)`\n  display: flex;\n`\n\nconst Media = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: flex-start;\n`\n\nconst MediaBody = styled.div`\n  flex: 1;\n`\n\nconst MediaImage = styled.div`\n  margin-right: 20px;\n`\n\nexport const NameCard = () => (\n  <Media>\n    <MediaImage>\n      <StyledAvatar />\n    </MediaImage>\n    <MediaBody>\n      <Name>Kyran Jamie Burraston</Name>\n    </MediaBody>\n  </Media>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport default ({ post }: any) => \n  <Link to={post.frontmatter.path}>\n    {post.frontmatter.title} ({post.frontmatter.date})\n  </Link>\n","import * as React from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport styled from 'styled-components'\n\nimport { Layout } from '../components/layout'\nimport { AvailableForWork } from '../components/available-for-work'\nimport { NameCard } from '../components/name-card'\nimport PostLink from '../components/post-link'\n\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        name: string;\n        tagline: string;\n      }\n    }\n  }\n}\n\nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        name\n        tagline\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexContainer = styled.div`\n  margin-top: 16px;\n  max-width: 680px\n`\n\nexport default class IndexPage extends React.Component<any, {}> {\n  render () {\n    const { name, tagline, lookingForWork }: any = this.props.data.site.siteMetadata\n    const { edges }: any = this.props.data.allMarkdownRemark\n\n    const Posts = edges\n      .filter((edge: any) => !!edge.node.frontmatter.date)\n      .map((edge: any) => <PostLink key={edge.node.id} post={edge.node} />)\n\n    return (\n      <Layout>\n        <NameCard />\n        <IndexContainer>\n          <p>Thanks for stopping by.</p>\n          <p>\n            I’m a frontend developer based in Amsterdam.\n          </p>\n          <p>\n            Over the last few years I’ve worked with product companies such as&nbsp;\n            <a href=\"https://usabilla.com/\">Usabilla,</a> <a href=\"https://www.goldrepublic.com/\">GoldRepublic,</a>\n            &nbsp;and <a href=\"https://blockport.io/\">Blockport.</a>\n          </p>\n          <p>\n            I enjoy solving the problems that come with building large web applications. Particular interests\n            include data visualisation, web accessibility and performance optimisation.\n          </p>\n        </IndexContainer>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}