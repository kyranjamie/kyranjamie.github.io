{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/pages/index.tsx","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","indexPageQuery","PostLink","_ref","post","react","gatsby_link_default","a","to","frontmatter","path","title","date","IndexPage","render","console","log","this","props","_this$props$data$site","data","site","siteMetadata","name","tagline","Posts","allMarkdownRemark","edges","filter","edge","node","map","pages_PostLink","key","id","layout","__webpack_require__","d","__webpack_exports__","Layout","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_module_scss__WEBPACK_IMPORTED_MODULE_1__","children","styles","createElement","className","m","module","exports","require","default","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","e","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"oLAY2BA,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,4ICxCf,IAAMC,EAAc,aAwBdC,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACtBC,EAAA,yBACEA,EAAA,cAACC,EAAAC,EAAD,CAAMC,GAAIJ,EAAKK,YAAYC,MACxBN,EAAKK,YAAYE,MADpB,KAC6BP,EAAKK,YAAYG,KAD9C,OAMiBC,4FACnBC,OAAA,WACEC,QAAQC,IAAIC,KAAKC,OADV,IAAAC,EAGmBF,KAAKC,MAAME,KAAKC,KAAKC,aAAvCC,EAHDJ,EAGCI,KAAMC,EAHPL,EAGOK,QAGRC,EAFYR,KAAKC,MAAME,KAAKM,kBAA1BC,MAGLC,OAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKrB,YAAYG,OACvCmB,IAAI,SAAAF,GAAI,OAAIxB,EAAA,cAAC2B,EAAD,CAAUC,IAAKJ,EAAKC,KAAKI,GAAI9B,KAAMyB,EAAKC,SAEvD,OACEzB,EAAA,cAAC8B,EAAA,EAAD,KACE9B,EAAA,wBAAKkB,GACLlB,EAAA,uBAAImB,GACJnB,EAAA,cAACC,EAAAC,EAAD,CAAMC,GAAG,SAAT,cACAH,EAAA,0BACGoB,QAjB4B/B,+CCjDvC0C,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAIO,SAASG,EAATpC,GAAoC,IAAjByC,EAAiBzC,EAAjByC,SAExB,OADA7B,QAAQC,IAAI6B,GAEVJ,EAAAlC,EAAAuC,cAAA,OAAKC,UAAWF,UACbD,yBCRP,IAAsBI,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,uBCA/C,IAAAK,EAASjB,EAAQ,IAAckB,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBnB,EAAQ,KAAgBiB,EAAAE,EAH1C,OAG0C,CAC1CI,cAAA,EACAC,IAAA,WACA,IACA,UAAA3C,MAAA4C,MAAAH,GAAA,GACK,MAAAI,GACL,+GCNMC,EAAmB,SAAA5D,GAAkB,IAAf6D,EAAe7D,EAAf6D,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIEvE,IAAMoD,cAAcuB,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,OANV,MAUXT,EAAiBU,UAAY,CAC3BT,SAAUpE,IAAU8E,MAAM,CACxBN,SAAUxE,IAAUE,OAAOC,aAC1BA,YAGUgE","file":"component---src-pages-index-tsx-0a3a70fd5fcf4f1d32d7.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport * as styles from './Index.module.scss'\n\nimport { Layout } from '../components/layout'\n  \ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        name: string;\n        tagline: string;\n      }\n    }\n  }\n}\n  \nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        name\n        tagline\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const PostLink = ({ post }: any) => (\n  <div>\n    <Link to={post.frontmatter.path}>\n      {post.frontmatter.title} ({post.frontmatter.date})\n    </Link>\n  </div>\n)\n  \nexport default class IndexPage extends React.Component<any, {}> {\n  render() {\n    console.log(this.props);\n\n    const { name, tagline } = this.props.data.site.siteMetadata\n    const { edges } = this.props.data.allMarkdownRemark\n\n    const Posts = edges\n      .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n      .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n  \n    return (\n      <Layout>\n        <h1>{name}</h1>\n        <p>{tagline}</p>\n        <Link to=\"about\">About page</Link>\n        <main>\n          {Posts}\n        </main>\n      </Layout>\n    )\n  }\n}\n","import React from 'react'\n\nimport * as styles from './layout.module.scss'\n\nexport function Layout ({ children }: any) {\n  console.log(styles)\n  return (\n    <div className={styles.Layout}>\n      {children}\n    </div>\n  )\n}","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}